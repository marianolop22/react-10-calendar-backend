{"version":3,"sources":["types/types.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["types","baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventUpdated","eventClearActiveEvent","eventsLoaded","login","user","startLogout","dispatch","clear","logout","checkingFinish","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","then","clone","initEvet","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","onDoubleClickEvent","onSelectEvent","onView","view","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadious","opacity","display","color","onSelectSlot","selectable","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","extact","path","exact","initialSate","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3be51d0.chunk.js","sourcesContent":["export const types = {\n    uiOpenModal: '[UI] open modal',\n    uiCloseModal: '[UI] close modal',\n\n    eventAddNew: '[event] add new',\n    eventStartAddNew: '[event] start add new',\n    eventLogout: '[event] logout',\n    eventSetActive:'[event] set active',\n    eventClearActiveEvent: '[event] clear active event',\n    eventUpdated: '[evetn] event updated',\n    eventDeleted: '[event] event deleted',\n    eventLoaded: '[event] events loaded',\n\n\n\n    authCheckingFinish: '[auth] finish checking login state',\n    authStartLogin: '[auth] start login',\n    authLogin: '[auth] login',\n    authStartRegister: '[auth] start register',\n    authStartTokenRenew: '[auth] start token renew',\n    authLogout: '[auth] logout'\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = (endPoint, data, method='GET') => {\n    \n    const url = `${baseUrl}/${endPoint}`;\n\n    if (method ==='GET') {\n        return fetch(url);\n        \n    } else {\n\n        return fetch(url,{\n            method,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nconst fetchConToken = (endPoint, data, method='GET') => {\n    \n    const url = `${baseUrl}/${endPoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method ==='GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n        \n    } else {\n        return fetch(url,{\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from \"moment\";\n\nexport const prepareEvents = (events = []) => {\n    \n    return events.map( e => ({\n        ...e,\n        end: moment(e.end).toDate(),\n        start: moment(e.start).toDate()\n    }));\n\n}","import { types } from \"../types/types\";\nimport { fetchConToken  } from '../helpers/fetch';\nimport Swal from \"sweetalert2\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\n\nexport const eventStartAddNew = (event) => {\n    \n    return async (dispatch, getState) => {\n        \n        const {uid, name} = getState().auth;\n\n        try {\n            \n            const resp = await fetchConToken ('events', event, 'POST');\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                };\n                dispatch (eventAddNew(event));\n            } else {\n                Swal.fire('Error', body.msg,  'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\n\n/**\n * Agrega el nuevo evento al store de redux\n * @param {{}} event - Objeto de tipo evento\n */\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\n/**\n * Setea el evento seleccionado como activo\n * @param {{}} event - Objeto de tipo evento\n */\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\n/**\n * Actualiza el evento indicado\n * @param {{}} event - Objeto de tipo evento\n */\nexport const eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n/**\n * Limpia en el store el evento activo\n */\nexport const eventClearActiveEvent = () =>( {\n    type: types.eventClearActiveEvent\n});\n\n/**\n * Elimina un evento activo\n */\nexport const eventDeleted = () =>( {\n    type: types.eventDeleted\n});\n\n\nexport const eventStartLoading = () => {\n    return async (dispatch) => {\n        \n        try {\n            const resp = await fetchConToken ('events', {} );\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                const events = prepareEvents(body.eventos);\n                dispatch (eventsLoaded(events));\n            } else {\n                Swal.fire('Error', body.msg,  'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nconst eventsLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventStartUpdate = (event) => {\n    \n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken (`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                dispatch (eventUpdated(event));\n            } else {\n                Swal.fire('Error', body.msg,  'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const eventStartDelete = () => {\n    return async (dispatch, getState) => {\n\n        const {id} = getState().calendar.activeEvent;\n\n\n        try {\n            const resp = await fetchConToken (`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n    \n            if ( body.ok ) {\n                dispatch (eventDeleted());\n            } else {\n                Swal.fire('Error', body.msg,  'error');\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n};\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n});\n","import { types } from \"../types/types\";\nimport Swal from 'sweetalert2';\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = (email, password) => {\n\n    return async(dispatch) => {\n        \n        const resp = await fetchSinToken ('auth', {email, password}, 'POST');\n        const body = await resp.json();\n\n        if ( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch ( login ({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg,'error');\n        }\n    }\n};\n\nexport const startRegister = (name, email, password) => {\n    \n    return async (dispatch) => {\n        const resp = await fetchSinToken ('auth/new', { name, email, password }, 'POST');\n        const body = await resp.json();\n        \n        if ( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch ( login ({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg,'error');\n        }\n        \n    }\n}\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logout());\n        dispatch( eventLogout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout,\n});\n\n\nexport const startChecking = () => {\n    return async (dispatch) => {\n        const resp = await fetchConToken ('auth/renew', {} );\n        const body = await resp.json();\n        \n        if ( body.ok ) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch ( login ({\n                uid: body.uid,\n                name: body.name\n            }));\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n","import { useState } from \"react\";\n\n/**\n * Este custom Hook, sirve para tratar los campos de un formulario.\n * \n * @param {Object} initialState El estado inicial\n * @returns {Array} Retorna un array con el state  y los métodos que se pueden manejar\n */\nexport const useForm = ( initialState={} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues ( initialState );\n    };\n\n    const handleInputChange = ({target}) => {\n        \n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n    };\n\n    return [values, handleInputChange, reset];\n\n};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'mama@mia.comm',\n        lPassword: '123456'\n    });\n\n    const [formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName:'Mariano',\n        rEmail: 'mari@ano.com',\n        rPassword: '123456',\n        rPassword2:'123456'\n    });\n\n    const {lEmail, lPassword} = formLoginValues;\n    const {rName ,rEmail ,rPassword ,rPassword2} = formRegisterValues\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch ( startLogin (lEmail, lPassword) );\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword !== rPassword2) {\n            return Swal.fire('Error','Las contraseñas deben ser iguales','error');\n        }\n\n        dispatch ( startRegister (rName ,rEmail ,rPassword) );\n\n    }\n\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword\"\n                                value={rPassword}\n                                onChange={handleRegisterInputChange}\n\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from  '../../actions/auth';\n\nexport const Navbar = () => {\n\n\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout ());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-5\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            <button className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n\n    const {title, user} = event;\n\n    return (\n        <div>\n            <strong>{title}</strong>\n            <span>- {user.name}</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport './modal.css';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from \"sweetalert2\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\n \nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\nconst then = now.clone().add(1,'hours');\n\n\nconst initEvet = {\n    title:'',\n    notes:'',\n    start: now.toDate(),\n    end: then.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar);\n\n    // const [dateStart, setDateStart] = useState(now.toDate());\n    // const [dateEnd, setDateEnd] = useState(then.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    \n    const [formValues, setFormValues] = useState(initEvet);\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues (activeEvent);\n        } else {\n            setFormValues (initEvet);\n        }\n    }, [activeEvent, setFormValues]);\n\n\n    const handleInputChange =({target}) => {\n        setFormValues ({\n            ...formValues,\n            [target.name]: target.value\n        });\n    };\n\n    const closeModal = () => {\n        dispatch ( uiCloseModal() );\n        dispatch ( eventClearActiveEvent());\n        setFormValues (initEvet);\n    };\n\n    const handleStartDateChange = (e) => {\n        // setDateStart(e);\n        setFormValues ({\n            ...formValues,\n            start: e\n        });\n    };\n\n    const handleEndDateChange = (e) => {\n        // setDateEnd(e);\n        setFormValues ({\n            ...formValues,\n            end: e\n        });\n    };\n\n    const handleSubmitForm =(e) => {\n        e.preventDefault();\n\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\n            Swal.fire('Error','La fecha fin debe ser mayor a inicio', 'error');\n            return;\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        //TODO: guardar en la base de datos\n\n        if ( activeEvent ) {\n            dispatch ( eventStartUpdate ( formValues ));\n        } else {\n            dispatch (eventStartAddNew (formValues));\n        }\n\n        setTitleValid(true);\n        closeModal();\n\n    };\n\n\n    return (\n        <Modal\n            isOpen={modalOpen}\n            //   onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={customStyles}\n            closeTimeoutMS={200}\n            className=\"modal\"\n            overlayClassName=\"modal-fondo\"\n\n        >\n            <h1> { activeEvent ? 'Editar evento' : 'Nuevo evento'} </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={handleSubmitForm}\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={start}\n                        className=\"form-control\"\n                    />\n                    {/* <input className=\"form-control\" placeholder=\"Fecha inicio\" /> */}\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={end}\n                        minDate={start}\n                        className=\"form-control\"\n                    />\n                    {/* <input className=\"form-control\" placeholder=\"Fecha inicio\" /> */}\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventClearActiveEvent } from '../../actions/events';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch ( eventClearActiveEvent());\n        dispatch ( uiOpenModal());\n        \n    };\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick = {handleClickNew}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickDelete = () => {\n        dispatch ( eventStartDelete() );\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick = {handleClickDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar Evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navbar } from '../ui/Navbar';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from \"../../helpers/calendar-messages-es\";\n\nimport 'moment/locale/es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\nmoment.locale('es');\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n    \n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n\n    useEffect(() => {\n        dispatch (eventStartLoading())\n    }, [dispatch]);\n\n    const onDloubleClick =(e) => {\n        dispatch ( uiOpenModal() );\n    };\n\n    const onSelectEvent =(e) => {\n        dispatch ( eventSetActive (e));\n    };\n\n    const onViewChange = (e) => {\n        localStorage.setItem('lastView', e);\n        setLastView(e);\n    };\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n\n        \n\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadious: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n        return {\n            style\n        }\n    };\n\n    const onSelectSlot = (e) => {\n        dispatch ( eventClearActiveEvent() );\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar/>\n            <Calendar\n                localizer={localizer}\n                events={events}\n                onDoubleClickEvent={onDloubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                view={lastView}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onSelectSlot = { onSelectSlot}\n                selectable={true}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            {\n                (activeEvent) && <DeleteEventFab/>\n            }\n            <AddNewFab/>\n            <CalendarModal/>\n        </div>\n    )\n}","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest //tengo el resto de las properties\n}) => {\n\n    // localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route\n            {...rest}\n            component={ (props)=> (\n                (isAuthenticated) \n                    ? <Component {...props} /> //si está autenticado, mando el componente al que quiero ingresar con todas las propiedades\n                    : ( <Redirect to=\"/login\"/>)\n            )}\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest //tengo el resto de las properties\n}) => {\n    return (\n        <Route\n            {...rest}\n            component={ (props)=> (\n                ( !isAuthenticated ) \n                    ? <Component {...props} /> //si está autenticado, mando el componente al que quiero ingresar con todas las propiedades\n                    : ( <Redirect to=\"/\"/>)\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const {checking, uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch ( startChecking());\n    }, [dispatch]);\n\n    if (checking) {\n        return <h5>Espere....</h5>\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        extact\n                        path=\"/login\" \n                        component={LoginScreen}\n                        isAuthenticated={ !!uid }/>\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\" \n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/login\"/>\n\n                    {/* <Route exact path=\"/login\" component={LoginScreen}/> */}\n                    {/* <Route exact path=\"/\" component={CalendarScreen}/> */}\n                    {/* <Redirect to=\"/\"/> */}\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n// {\n//     id: new Date().getTime(),\n//     title:'Cumpleaños del jefe',\n//     start: moment().toDate(), //new Date()\n//     end: moment().add(2,'hours').toDate(),\n//     bgcolor:'#fafafa',\n//     notes:'comprar fafafa',\n//     user: {\n//         _id: '123',\n//         name: 'Mariano'\n//     }\n// }\n\nconst initialSate = {\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialSate, action) => {\n\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            };            \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [ ...state.events, action.payload ]\n            };            \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent:null\n            };            \n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map( e => ( e.id === action.payload.id ) ? action.payload : e)\n            };    \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter( e => ( e.id !== state.activeEvent.id ) ),\n                activeEvent: null\n            };    \n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n        case types.eventLogout:\n            return {\n                ...initialSate\n            }\n    \n        default:\n            return state;\n    }\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    modalOpen:false\n};\n\nexport const uiReducer = ( state = initialState, action) => {\n\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            };\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            };    \n        default:\n            return state;\n    }\n\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = (state = initialState, action) => {\n    \n\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { calendarReducer } from './calendarReducer';\nimport { uiReducer } from './uiReducer';\nimport { authReducer } from './authReducer';\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    //TODO: calendarreducer\n})\n","import { createStore, applyMiddleware,compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer, \n    composeEnhancers (\n        applyMiddleware(thunk)\n    )\n);","\nimport React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter/>\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}